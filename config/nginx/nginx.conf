# Main NGINX configuration file
events {
    # Worker connections
    worker_connections 1024;
}

http {
    # Redirect HTTP to HTTPS 80 -> 443
    server {
        listen 80;
        server_name localhost;

        # Redirect all HTTP requests to HTTPS
        return 301 https://$host$request_uri;
    }

    # HTTPS server block for Port 443
    server {
        listen 443 ssl;
        server_name localhost;

        # SSL certificate and key
        ssl_certificate /etc/nginx/certs/localhost.pem;
        ssl_certificate_key /etc/nginx/certs/localhost-key.pem;

        # SSL protocols
        ssl_protocols TLSv1.2 TLSv1.3;

        # SSL ciphers
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
        ssl_prefer_server_ciphers on;

        # SSL session settings
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options DENY;
        add_header X-XSS-Protection "1; mode=block";


        # Serve static files from the '/var/html/uwazi-frontend' folder
        location / {
            root /var/html/uwazi-frontend; # This is where the built frontend static files are served from
            index index.html;
            try_files $uri $uri/ =404;
        }

        # Reverse proxy only requests starting with '/api' to Flask
        location /api {
            proxy_pass http://api:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
        }


    }



    # Redirect HTTP to HTTPS 8000 -> 8443
    server {
        listen 8000;
        server_name localhost;

        # Redirect all HTTP requests to HTTPS
        return 301 https://$host:8443$request_uri;
    }

    # HTTPS server block for Port 8443
    server {
        listen 8443 ssl;
        server_name localhost;

        # SSL certificate and key
        ssl_certificate /etc/nginx/certs/localhost.pem;
        ssl_certificate_key /etc/nginx/certs/localhost-key.pem;

        # SSL protocols
        ssl_protocols TLSv1.2 TLSv1.3;

        # SSL ciphers
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
        ssl_prefer_server_ciphers on;

        # SSL session settings
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options DENY;
        add_header X-XSS-Protection "1; mode=block";


        
        location / {
            proxy_pass http://docs:4000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
        }
    }


}


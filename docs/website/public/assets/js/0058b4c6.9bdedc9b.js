"use strict";(self.webpackChunkdocusaurus_template_openapi_docs=self.webpackChunkdocusaurus_template_openapi_docs||[]).push([[849],{86164:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"openApiSidebar":[{"type":"category","label":"Docs","items":[{"type":"link","label":"Overview","href":"/docs/uwazi/overview","docId":"uwazi/overview","unlisted":false},{"type":"link","label":"Creating the env file","href":"/docs/uwazi/env-file-config","docId":"uwazi/env-file-config","unlisted":false},{"type":"link","label":"Developing","href":"/docs/uwazi/running-the-project","docId":"uwazi/running-the-project","unlisted":false},{"type":"link","label":"Testing","href":"/docs/uwazi/postman-testing","docId":"uwazi/postman-testing","unlisted":false},{"type":"link","label":"Database","href":"/docs/uwazi/database-erd","docId":"uwazi/database-erd","unlisted":false}],"collapsed":true,"collapsible":true}]},"docs":{"uwazi/database-erd":{"id":"uwazi/database-erd","title":"Database design","description":"The database schema for the Uwazi API is designed to support the application\'s functionality. The schema includes tables for users, organizations, documents, and other entities. An ERD diagram is a visual representation of the database schema, which helps to understand the relationships between different entities. The following diagram shows the database schema for the Uwazi API:","sidebar":"openApiSidebar"},"uwazi/env-file-config":{"id":"uwazi/env-file-config","title":"Creating the env file","description":"The application uses environment variables to configure the application\'s behavior, such as database connection details, API keys, and other settings. These variables are stored in the .env file at the root of the project.","sidebar":"openApiSidebar"},"uwazi/overview":{"id":"uwazi/overview","title":"Overview","description":"The Uwazi API empowers insurance providers by streamlining the verification of hospital insurance claims. It determines whether treatment procedures are under-reported, within policy limits, or exceed the allowable limits. By providing comprehensive insights, the API equips insurers with the critical information needed to make well-informed decisions when approving claims.","sidebar":"openApiSidebar"},"uwazi/postman-testing":{"id":"uwazi/postman-testing","title":"Testing with Postman","description":"The Uwazi API uses Postman for testing. Postman is a powerful tool for testing APIs. It allows you to create, run, and test API requests and responses. It uses a graphical user interface (GUI) to create and manage API requests and responses. It also provides a variety of features such as request and response history, environment variables, and more.","sidebar":"openApiSidebar"},"uwazi/running-the-project":{"id":"uwazi/running-the-project","title":"Developing","description":"Overview","sidebar":"openApiSidebar"}}}}')}}]);